@page "/simpsons"
@using NumericalMethods.Data

<form action="javascript:void(0);">
    <label for="function">Function to integrate:</label>
    <input @bind-value="@input" id="function" />
    <br />

    <label for="lowerBound">Lower bound:</label>
    <input type="number" step="any" @bind-value="@lowerBound" id="lowerBound" />
    <br />

    <label for="upperBound">Upper bound:</label>
    <input type="number" step="any" @bind-value="@upperBound" id="upperBound" />
    <br />

    <label for="numOrdinates">Number of strips:</label>
    <input type="number" min="1" @bind-value="@numOrdinates" id="numOrdinates" />
    <br />

    <button @onclick="@Calculate" type="submit">Calculate</button>
</form>
<p style="white-space:pre-line">@output</p>

@code {
    string input = "";
    string output = "";

    double lowerBound;
    double upperBound;
    int numOrdinates = 1;

    private void Calculate()
    {
        Queue<Element> elements = RPN.SYA(input);

        double h = (upperBound - lowerBound) / numOrdinates;

        double firstSum = RPN.Compute(elements, lowerBound) + RPN.Compute(elements, upperBound);
        double secondSum = 0;
        double thirdSum = 0;
        double sum = 0;

        for (double i = lowerBound + h; i < upperBound; i += 2 * h)
            secondSum += RPN.Compute(elements, i);

        for (double i = lowerBound + 2 * h; i < upperBound; i += 2 * h)
            thirdSum += RPN.Compute(elements, i);

        sum = firstSum + 4 * secondSum + 2 * thirdSum;
        sum *= h / 3;

        output = sum.ToString();
    }
} 